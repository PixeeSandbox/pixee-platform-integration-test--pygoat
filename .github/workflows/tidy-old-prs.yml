name: Delete Old Pull Requests

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  delete_old_pull_requests:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Delete old pull requests
        uses: actions/github-script@v6
        with:
          script: |
            // Set to 1 hour instead of 1 day for testing
            const maxAgeInMillis = 1 * 60 * 60 * 1000;
            const now = new Date();
            let closedCount = 0;
            
            // Helper function to process paginated results
            async function processAllPullRequests() {
              let page = 1;
              let hasMorePages = true;
              let totalPRs = 0;
              
              while (hasMorePages) {
                // Fetch PRs with pagination (100 per page is maximum allowed)
                const response = await github.rest.pulls.list({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  state: "open",
                  per_page: 100,
                  page: page
                });
                
                const pullRequests = response.data;
                totalPRs += pullRequests.length;
                
                console.log(`Processing page ${page} with ${pullRequests.length} PRs`);
                
                // Process this page of PRs
                for (const pr of pullRequests) {
                  const createdAt = new Date(pr.created_at);
                  const prAge = now - createdAt;
                  
                  if (prAge > maxAgeInMillis) {
                    console.log(`Closing PR #${pr.number} - "${pr.title}" (created ${createdAt.toISOString()}, age: ${Math.floor(prAge / (1000 * 60 * 60))} hours)`);
                    
                    try {
                      await github.rest.pulls.update({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        pull_number: pr.number,
                        state: "closed",
                      });
                      
                      await github.rest.issues.createComment({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: pr.number,
                        body: `This pull request was automatically closed because it has been open for more than 1 hour.`
                      });
                      
                      closedCount++;
                    } catch (error) {
                      console.error(`Error closing PR #${pr.number}: ${error}`);
                    }
                  }
                }
                
                // Check if we have more pages
                hasMorePages = pullRequests.length === 100; // Full page means there might be more
                page++;
                
                // Prevent rate limiting issues with a small delay between pages
                if (hasMorePages) {
                  await new Promise(resolve => setTimeout(resolve, 1000));
                }
              }
              
              return totalPRs;
            }
            
            // Process all pages of pull requests
            const totalPRs = await processAllPullRequests();
            console.log(`Processed ${totalPRs} total PRs. Closed ${closedCount} PRs that were older than 1 hour.`);
            
            // Reset back to 24 hours for production use after testing
            // const maxAgeInMillis = 24 * 60 * 60 * 1000;
